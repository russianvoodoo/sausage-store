variables:
   VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - module-pipelines
  - notification
  - test
  - template: Security/SAST.gitlab-ci.yml 

frontend:
  stage: module-pipelines
  trigger:
    include:
      - "/frontend/.gitlab-ci.yml"
    strategy: depend #depend нужен, если какой-нибудь дочерний пайплайн свалился, мы знали, что общий пайплайн тоже идёт с ошибкой
  only:
    changes: #как только происходит изменение в папке frontend, запускается дочерний пайплайн, который лежит в этой папке
      - frontend/**/*

backend:
  stage: module-pipelines
  trigger:
    include:
      - "/backend/.gitlab-ci.yml"
    strategy: depend 
  only:
    changes:  #как только происходит изменение в папке backend, запускается дочерний пайплайн, который лежит в этой папке
      - backend/**/* 
            
slack-notification: # курлык
  stage: notification
  script:
    - > 
      curl -X POST -H "Content-type: application/json" --data '{"text": "Вышла новая версия сосисчной - `'${VERSION}'`"}' https://hooks.slack.com/services/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

spotbugs-sast:
  variables:
    COMPILE: "false"
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=04_ILYAZADOKHIN_BACKEND
      -Dsonar.projectName=04_ИЛЬЯЗАДОХИН_БЭКЭНД
      -Dsonar.host.url=https://${SONAR_URL}
      -Dsonar.login=${SONAR_LOGIN} 

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend 
    - >
      sonar-scanner
      -Dsonar.projectName=04_ИЛЬЯЗАДОХИН_ФРОНТЭНД
      -Dsonar.projectKey=04_ILYAZADOKHIN_FRONTEND
      -Dsonar.sources=.
      -Dsonar.host.url=https://${SONAR_URL}
      -Dsonar.login=${SONAR_LOGIN} 
