variables:
   VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - test
   - release
   - notification
   - deploy 

build:
   stage: build
   script:
      - cd frontend
      - npm install
      - npm run build
      - cd ..
      - mkdir sausage-store-${VERSION}
      - mv frontend/dist/frontend sausage-store-${VERSION}/public_html # копирование собранного фронтенда  
   artifacts:
      paths:
         - sausage-store-${VERSION}/public_html
   rules:
      - changes:
           - frontend/*

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend 
    - >
      sonar-scanner
      -Dsonar.projectName=04_ИЛЬЯЗАДОХИН_ФРОНТЭНД
      -Dsonar.projectKey=04_ILYAZADOKHIN_FRONTEND
      -Dsonar.sources=.
      -Dsonar.host.url=https://${SONAR_URL}
      -Dsonar.login=${SONAR_LOGIN} 

release:
   stage: release
   script:
      - tar czvf sausage-store-${VERSION}.tar.gz sausage-store-${VERSION}
      - >
        curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_FRONTEND_REPO_URL}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
   rules:
      - changes:
           - frontend/*

slack-notification: # курлык
  stage: notification
  script:
    - > 
      curl -X POST -H "Content-type: application/json" --data '{"text":"`Вышла новая версия фронта - '${VERSION}'`\nСсылка на скачивание — <'${NEXUS_FRONTEND_REPO_URL}'sausage-store-front/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.tar.gz|frontend>"}' https://hooks.slack.com/services/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

deploy:
  stage: deploy
  before_script:
      - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
      - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      - mkdir -p ~/.ssh
      - chmod 600 ~/.ssh
      - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./frontend/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_FRONTEND_REPO_URL=${NEXUS_FRONTEND_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./frontend/deploy.sh
